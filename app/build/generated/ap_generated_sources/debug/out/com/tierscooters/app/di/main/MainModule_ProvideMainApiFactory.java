// Generated by Dagger (https://dagger.dev).
package com.tierscooters.app.di.main;

import com.tierscooters.app.network.main.MainApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainModule_ProvideMainApiFactory implements Factory<MainApi> {
  private final Provider<Retrofit> retrofitProvider;

  public MainModule_ProvideMainApiFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public MainApi get() {
    return provideMainApi(retrofitProvider.get());
  }

  public static MainModule_ProvideMainApiFactory create(Provider<Retrofit> retrofitProvider) {
    return new MainModule_ProvideMainApiFactory(retrofitProvider);
  }

  public static MainApi provideMainApi(Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(MainModule.provideMainApi(retrofit));
  }
}
