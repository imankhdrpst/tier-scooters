// Generated by Dagger (https://dagger.dev).
package com.tierscooters.app;

import com.tierscooters.app.viewmodels.ViewModelProviderFactory;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerFragment_MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BaseFragment_MembersInjector implements MembersInjector<BaseFragment> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<ViewModelProviderFactory> providerFactoryProvider;

  public BaseFragment_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<ViewModelProviderFactory> providerFactoryProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.providerFactoryProvider = providerFactoryProvider;
  }

  public static MembersInjector<BaseFragment> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<ViewModelProviderFactory> providerFactoryProvider) {
    return new BaseFragment_MembersInjector(androidInjectorProvider, providerFactoryProvider);
  }

  @Override
  public void injectMembers(BaseFragment instance) {
    DaggerFragment_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    injectProviderFactory(instance, providerFactoryProvider.get());
  }

  @InjectedFieldSignature("com.tierscooters.app.BaseFragment.providerFactory")
  public static void injectProviderFactory(BaseFragment instance,
      ViewModelProviderFactory providerFactory) {
    instance.providerFactory = providerFactory;
  }
}
